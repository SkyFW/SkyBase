package org.skyfw.base.service;

import org.skyfw.base.mcodes.TBaseMCode;
import org.skyfw.base.mcodes.TMCode;
import org.skyfw.base.mcodes.TMCodeSeverity;

public enum TServiceMCode implements TMCode {

    SERVICE_INSTANCE_IS_NULL(TBaseMCode.SERVER_INTERNAL_ERROR)
    , SERVICE_METHOD_INSTANCE_IS_NULL(TBaseMCode.SERVER_INTERNAL_ERROR)

    , PARENT_SERVICE_IS_NULL(TBaseMCode.SERVER_INTERNAL_ERROR)

    // >>> Reflection matters
    , EXCEPTION_IN_GENERATING_INSTANCE_FROM_SERVICE_CLASS(TBaseMCode.SERVER_INTERNAL_ERROR)
    , EXCEPTION_IN_GENERATING_INSTANCE_FROM_SERVICE_METHOD_CLASS(TBaseMCode.SERVER_INTERNAL_ERROR)

    , EXCEPTION_ON_GETTING_INFO_FROM_SERVICE_OBJECT(TBaseMCode.SERVER_INTERNAL_ERROR)


    , EXCEPTION_ON_GETTING_INFO_FROM_SERVICE_METHOD_OBJECT(TBaseMCode.SERVER_INTERNAL_ERROR)


    , EXCEPTION_ON_CALLING_AUTHORIZE_REQUEST_METHOD(TBaseMCode.SERVER_INTERNAL_ERROR)
    , EXCEPTION_ON_CALLING_AUTHORIZE_RESPONSE_METHOD(TBaseMCode.SERVER_INTERNAL_ERROR)


    , EXCEPTION_ON_RUNNING_SERVICE_METHOD(TBaseMCode.SERVER_INTERNAL_ERROR)
    , EXCEPTION_ON_INVOKING_SERVICE_REFLECTION_METHOD(TBaseMCode.SERVER_INTERNAL_ERROR)

    , EXCEPTION_ON_HANDLING_SERVICE_REQUEST(TBaseMCode.SERVER_INTERNAL_ERROR)

    , REQUEST_CLASS_NOT_DEFINED_BY_SERVICE(TBaseMCode.SERVER_INTERNAL_ERROR)
    , RESPONSE_CLASS_NOT_DEFINED_BY_SERVICE(TBaseMCode.SERVER_INTERNAL_ERROR)



    , REQUEST_META_DATA_IS_NULL(TBaseMCode.BAD_REQUEST)
    , REQUEST_META_DATA_IS_NOT_VALID(TBaseMCode.BAD_REQUEST)

    , REQUEST_PATH_IS_NULL(TBaseMCode.BAD_REQUEST)
    , REQUEST_PATH_IS_EMPTY(TBaseMCode.BAD_REQUEST)
    , REQUEST_PATH_IS_NOT_VALID(TBaseMCode.BAD_REQUEST)

    , SERVICE_METHOD_NOT_FOUND(TBaseMCode.METHOD_NOT_FOUND)

    , REQUEST_DATA_MODEL_INSTANCE_IS_NULL(TBaseMCode.SERVER_INTERNAL_ERROR)
    , RESPONSE_DATA_MODEL_INSTANCE_IS_NULL(TBaseMCode.SERVER_INTERNAL_ERROR)

    , AUTHENTICATION_FAILED_WITH_PROVIDED_TOKEN(TBaseMCode.AUTHENTICATION_FAILED)
    ;

    TBaseMCode baseMCode;

    TServiceMCode(TBaseMCode baseMCode) {
        this.baseMCode = baseMCode;
    }

    @Override
    public String getModuleName() {
        return null;
    }

    @Override
    public TBaseMCode getBaseCode() {
        return this.baseMCode;
    }

    @Override
    public TMCodeSeverity getSeverity() {
        return null;
    }

    @Override
    public String getRawMessage() {
        return null;
    }
}
